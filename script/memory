#!/usr/bin/python

import subprocess
import re

ps = subprocess.Popen(['ps', '-caxm', '-orss,comm'], stdout=subprocess.PIPE).communicate()[0].decode()
vm = subprocess.Popen(['vm_stat'], stdout=subprocess.PIPE).communicate()[0].decode()

processLines = ps.split('\n')
sep = re.compile('[\s]+')
realTotal = 0 # kB
for row in range(1,len(processLines)):
    rowText = processLines[row].strip()
    rowElements = sep.split(rowText)
    try:
        real = float(rowElements[0]) * 1024
    except:
        real = 0
    realTotal += real

vmLines = vm.split('\n')
sep = re.compile(':[\s]+')
vmStats = {}
for row in range(1,len(vmLines)-2):
    rowText = vmLines[row].strip()
    rowElements = sep.split(rowText)
    vmStats[(rowElements[0])] = int(rowElements[1].strip('\.')) * 4096

print("Wired Memory:\t\t\t{0: >7} MiB".format(vmStats["Pages wired down"] / 1024 / 1024))
print("Active Memory:\t\t\t{0: >7} MiB".format(vmStats["Pages active"] / 1024 / 1024))
print("Inactive Memory:\t\t{0: >7} MiB".format(vmStats["Pages inactive"] / 1024 / 1024))
print("Free Memory:\t\t\t{0: >7} MiB".format(vmStats["Pages free"] / 1024 / 1024))
print("Real Memory Total (ps):\t\t{0:.2f} MiB".format(realTotal / 1024 / 1024))
